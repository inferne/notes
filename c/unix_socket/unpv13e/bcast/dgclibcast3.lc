#include    "unp.h"##  1 ##src/bcast/dgclibcast3.c##

static void recvfrom_alarm(int);##  2 ##src/bcast/dgclibcast3.c##

void##  3 ##src/bcast/dgclibcast3.c##
dg_cli(FILE *fp, int sockfd, const SA *pservaddr, socklen_t servlen)##  4 ##src/bcast/dgclibcast3.c##
{##  5 ##src/bcast/dgclibcast3.c##
    int     n;##  6 ##src/bcast/dgclibcast3.c##
    const int on = 1;##  7 ##src/bcast/dgclibcast3.c##
    char    sendline[MAXLINE], recvline[MAXLINE + 1];##  8 ##src/bcast/dgclibcast3.c##
    sigset_t sigset_alrm;##  9 ##src/bcast/dgclibcast3.c##
    socklen_t len;## 10 ##src/bcast/dgclibcast3.c##
    struct sockaddr *preply_addr;## 11 ##src/bcast/dgclibcast3.c##

    preply_addr = Malloc(servlen);## 12 ##src/bcast/dgclibcast3.c##

    Setsockopt(sockfd, SOL_SOCKET, SO_BROADCAST, &on, sizeof(on));## 13 ##src/bcast/dgclibcast3.c##

    Sigemptyset(&sigset_alrm);## 14 ##src/bcast/dgclibcast3.c##
    Sigaddset(&sigset_alrm, SIGALRM);## 15 ##src/bcast/dgclibcast3.c##

    Signal(SIGALRM, recvfrom_alarm);## 16 ##src/bcast/dgclibcast3.c##

    while (Fgets(sendline, MAXLINE, fp) != NULL) {## 17 ##src/bcast/dgclibcast3.c##

        Sendto(sockfd, sendline, strlen(sendline), 0, pservaddr, servlen);## 18 ##src/bcast/dgclibcast3.c##

        alarm(5);## 19 ##src/bcast/dgclibcast3.c##
        for (;;) {## 20 ##src/bcast/dgclibcast3.c##
            len = servlen;## 21 ##src/bcast/dgclibcast3.c##
            Sigprocmask(SIG_UNBLOCK, &sigset_alrm, NULL);## 22 ##src/bcast/dgclibcast3.c##
            n = recvfrom(sockfd, recvline, MAXLINE, 0, preply_addr, &len);## 23 ##src/bcast/dgclibcast3.c##
            Sigprocmask(SIG_BLOCK, &sigset_alrm, NULL);## 24 ##src/bcast/dgclibcast3.c##
            if (n < 0) {## 25 ##src/bcast/dgclibcast3.c##
                if (errno == EINTR)## 26 ##src/bcast/dgclibcast3.c##
                    break;      /* waited long enough for replies */## 27 ##src/bcast/dgclibcast3.c##
                else## 28 ##src/bcast/dgclibcast3.c##
                    err_sys("recvfrom error");## 29 ##src/bcast/dgclibcast3.c##
            } else {## 30 ##src/bcast/dgclibcast3.c##
                recvline[n] = 0;    /* null terminate */## 31 ##src/bcast/dgclibcast3.c##
                printf("from %s: %s",## 32 ##src/bcast/dgclibcast3.c##
                       Sock_ntop_host(preply_addr, len), recvline);## 33 ##src/bcast/dgclibcast3.c##
            }## 34 ##src/bcast/dgclibcast3.c##
        }## 35 ##src/bcast/dgclibcast3.c##
    }## 36 ##src/bcast/dgclibcast3.c##
}## 37 ##src/bcast/dgclibcast3.c##

static void## 38 ##src/bcast/dgclibcast3.c##
recvfrom_alarm(int signo)## 39 ##src/bcast/dgclibcast3.c##
{## 40 ##src/bcast/dgclibcast3.c##
    return;                     /* just interrupt the recvfrom() */## 41 ##src/bcast/dgclibcast3.c##
}## 42 ##src/bcast/dgclibcast3.c##
